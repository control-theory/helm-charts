{{- if .Values.storageClass }}
{{- if .Values.storageClass.create }}
{{- $provider := .Values.cloudProvider | default "custom" }}
{{- $provisioner := "" }}

{{- if eq $provider "eks" }}
  {{- $provisioner = "ebs.csi.aws.com" }}
{{- else if eq $provider "aks" }}
  {{- $provisioner = "disk.csi.azure.com" }}
{{- else if eq $provider "baremetal" }}
  {{- $provisioner = "nfs.csi.k8s.io" }}
{{- else if .Values.storageClass.customProvisioner }}
  {{- $provisioner = .Values.storageClass.customProvisioner }}
{{- else }}
  {{- fail (printf "Unsupported or missing cloudProvider '%s'. Please set 'storageClass.customProvisioner' in values.yaml." $provider) }}
{{- end }}

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .Values.storageClass.name }}
provisioner: {{ $provisioner }}
reclaimPolicy: {{ .Values.storageClass.reclaimPolicy | default "Retain" }}
volumeBindingMode: {{ .Values.storageClass.volumeBindingMode | default "WaitForFirstConsumer" }}
{{- if .Values.storageClass.parameters }}
parameters:
{{ toYaml .Values.storageClass.parameters | indent 2 }}
{{- end }}
{{- end }}
{{- end }}
